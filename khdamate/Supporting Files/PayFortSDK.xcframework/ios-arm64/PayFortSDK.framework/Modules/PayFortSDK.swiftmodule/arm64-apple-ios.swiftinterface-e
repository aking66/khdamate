// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-ios12.3 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name PayFortSDK
import CommonCrypto
import Foundation
import Network
import PassKit
@_exported import PayFortSDK
import Swift
import SystemConfiguration
import UIKit
import WebKit
@objc @_inheritsConvenienceInitializers open class PayFortView : UIKit.UIView {
  @objc @IBOutlet weak public var CardNumberTxt: PayFortSDK.PFKJVFloatLabeledTextField!
  @objc @IBOutlet weak public var cardNumberErrorlbl: UIKit.UILabel!
  @objc @IBOutlet weak public var CardNameTxt: PayFortSDK.PFKJVFloatLabeledTextField!
  @objc @IBOutlet weak public var CVCNumberTxt: PayFortSDK.PFKJVFloatLabeledTextField!
  @objc @IBOutlet weak public var cVCNumberErrorlbl: UIKit.UILabel!
  @objc @IBOutlet weak public var ExpDateTxt: PayFortSDK.PFKJVFloatLabeledTextField!
  @objc @IBOutlet weak public var expDateErrorlbl: UIKit.UILabel!
  @objc @IBOutlet weak public var titleView: UIKit.UIView!
  @objc @IBOutlet weak public var titleLbl: UIKit.UILabel!
  @objc @IBOutlet weak public var BackBtn: UIKit.UIButton!
  @objc @IBOutlet weak public var headerHeight: UIKit.NSLayoutConstraint!
  @objc @IBOutlet weak public var PriceLbl: UIKit.UILabel!
  @objc @IBOutlet weak public var savedCardSwitch: UIKit.UISwitch!
  @objc @IBOutlet weak public var saveCardLbl: UIKit.UILabel!
  @objc @IBOutlet weak public var imageCard: UIKit.UIImageView!
  @objc @IBOutlet weak public var SaveCardView: UIKit.UIView!
  @objc @IBOutlet weak public var paymentBtn: UIKit.UIButton!
  @objc deinit
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class ExpiryDateView : PayFortSDK.CardContainer {
  @objc deinit
}
public enum PayFortError : Swift.Error {
  case noInternet(Swift.Error?)
  case processingError(PayFortSDK.ErrorData?)
  case serverError(PayFortSDK.ErrorData?)
  case validateApiError(PayFortSDK.ValidateResponse)
  case cancelTransaction([Swift.String : Swift.String]?)
  public var errorDescription: Swift.String {
    get
  }
  public var errorCode: Swift.Int {
    get
  }
}
public enum CardItemError : Swift.Error {
  case cardNumberLengthError
  case amexCardNumberLengthError
  case cardNumberError
  case cvcLengthError
  case amexCvcLengthError
  case cvcFormatError
  case expiryMonthError
  case expiryYearError
  case expiryDateError
  case cardHolderNameError
  case unsupportedCardError
  case cardNotMatchPaymentOption
  case feildsIsEmptyError
  public var errorDescription: Swift.String {
    get
  }
  public var errorCode: Swift.Int {
    get
  }
  public static func == (a: PayFortSDK.CardItemError, b: PayFortSDK.CardItemError) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
}
public typealias transactionSuccess = ([Swift.String : Swift.String], [Swift.String : Swift.String]) -> Swift.Void
public typealias validateSuccess = ([Swift.String : Swift.String]) -> Swift.Void
public typealias transactionFaild = ([Swift.String : Swift.String], [Swift.String : Swift.String], Swift.String) -> Swift.Void
public typealias showLoading = () -> Swift.Void
public typealias transactionCanceled = ([Swift.String : Swift.String], [Swift.String : Swift.String]) -> Swift.Void
public enum ThreeDSResult {
  case onComplete(_: [Swift.String : Swift.String]?)
  case backButtonStatus(_: Swift.Bool)
  case onError(PayFortSDK.PayFortError)
  case hideLoading(Swift.Void)
}
extension UIDevice {
  public static let modelName: Swift.String
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class HolderNameView : PayFortSDK.CardContainer {
  @objc deinit
}
public typealias ErrorData = (code: Swift.Int, message: Swift.String)
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class PayButton : UIKit.UIButton {
  @objc public func setup(with request: [Swift.String : Swift.String], enviroment: PayFortSDK.PayFortEnviroment, payButtonBuilder: PayFortSDK.PayComponents, viewController: UIKit.UIViewController, showLoading: @escaping PayFortSDK.showLoading, success: @escaping PayFortSDK.transactionSuccess, faild: @escaping PayFortSDK.transactionFaild)
  @objc public func setup(with request: [Swift.String : Swift.String], enviroment: PayFortSDK.PayFortEnviroment, viewController: UIKit.UIViewController, showLoading: @escaping PayFortSDK.showLoading, success: @escaping PayFortSDK.transactionSuccess, faild: @escaping PayFortSDK.transactionFaild)
  @objc public func updateRequest(request: [Swift.String : Swift.String])
  @objc public func isRememberEnabled(_ enabled: Swift.Bool)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class CardContainer : UIKit.UIView {
  @objc @IBOutlet weak public var errorLabel: UIKit.UILabel! {
    @objc get
    @objc set
  }
  public var property: PayFortSDK.Property {
    get
    set
  }
  @objc override dynamic public func awakeFromNib()
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension CardContainer : UIKit.UITextFieldDelegate {
  @objc dynamic public func textField(_ textField: UIKit.UITextField, shouldChangeCharactersIn range: Foundation.NSRange, replacementString string: Swift.String) -> Swift.Bool
  @objc dynamic public func textFieldDidEndEditing(_ textField: UIKit.UITextField, reason: UIKit.UITextField.DidEndEditingReason)
}
@objc public class PayComponents : ObjectiveC.NSObject {
  public init(cardNumberView: PayFortSDK.CardNumberView, expiryDateView: PayFortSDK.ExpiryDateView, cvcNumberView: PayFortSDK.CVCNumberView, holderNameView: PayFortSDK.HolderNameView, rememberMe: Swift.Bool, language: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class CardNumberView : PayFortSDK.CardContainer {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class CVCNumberView : PayFortSDK.CardContainer {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers final public class Property : ObjectiveC.NSObject {
  @objc final public var textColor: UIKit.UIColor?
  @objc final public var fontStyle: UIKit.UIFont?
  @objc final public var backgroundColor: UIKit.UIColor?
  @objc final public var errorText: Swift.String?
  @objc final public var errorFontStyle: UIKit.UIFont?
  @objc final public var errorTextColor: UIKit.UIColor?
  @objc final public var titleText: Swift.String?
  @objc final public var titleTextColor: UIKit.UIColor?
  @objc final public var titleErrorTextColor: UIKit.UIColor?
  @objc final public var titleFontStyle: UIKit.UIFont?
  @objc override dynamic public init()
  @objc deinit
}
@objc public enum PayFortEnviroment : Swift.Int {
  case sandBox
  case production
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@objc open class PayFortController : UIKit.UIViewController {
  @objc public var isShowResponsePage: Swift.Bool
  @objc public var hideLoading: Swift.Bool
  @objc public var presentAsDefault: Swift.Bool
  @objc public init(enviroment: PayFortSDK.PayFortEnviroment)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc override dynamic open func viewDidLoad()
  @objc public func getUDID() -> Swift.String
  @objc public func callValidateAPI(with request: [Swift.String : Swift.String], showLoading: @escaping PayFortSDK.showLoading, success: @escaping PayFortSDK.validateSuccess, faild: @escaping PayFortSDK.transactionFaild)
  @objc public func callPayFort(withRequest: [Swift.String : Swift.String], currentViewController: UIKit.UIViewController, success: @escaping PayFortSDK.transactionSuccess, canceled: @escaping PayFortSDK.transactionCanceled, faild: @escaping PayFortSDK.transactionFaild)
  @objc public func callPayFortForApplePay(withRequest: [Swift.String : Swift.String], applePayPayment: PassKit.PKPayment, currentViewController: UIKit.UIViewController, success: @escaping PayFortSDK.transactionSuccess, faild: @escaping PayFortSDK.transactionFaild)
  @objc public func setPayFortCustomViewNib(_ viewNib: Swift.String)
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
}
public struct ValidateResponse : Swift.Decodable {
  public init(from decoder: Swift.Decoder) throws
}
extension PayFortSDK.CardItemError : Swift.Equatable {}
extension PayFortSDK.CardItemError : Swift.Hashable {}
extension PayFortSDK.PayFortEnviroment : Swift.Equatable {}
extension PayFortSDK.PayFortEnviroment : Swift.Hashable {}
extension PayFortSDK.PayFortEnviroment : Swift.RawRepresentable {}
